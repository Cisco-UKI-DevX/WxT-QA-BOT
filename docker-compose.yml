version: "3"
services:
    backend-api:
        build: ./backEnd
        restart: always
        env_file:
            - ./env/backEndCredentials.env
        depends_on:
            - db
        volumes:
            - ./credentials:/app/credentials
        ports:
            - "3002:3002"
        networks:
            - backend-network
    
    db:
        image: mysql:latest
        restart: always
        env_file:
            - ./env/MYSQLcredentials.env
        ports:
            - "3306:3306"
        #DB data will be persisted in this volume
        volumes:
            - sql-datavolume:/var/lib/mysql
            #Build new db based on the init.sql file 
            #- ./db:/docker-entrypoint-initdb.d/
            #Restoring DB data from backup
            - ./db/backups/qanda_2020-05-19_06h25m.Tuesday.sql:/docker-entrypoint-initdb.d/dump.sql
        networks:
            - backend-network
    
    db-backup:
        image: databack/mysql-backup
        user: "0"
        restart: always
        depends_on:
            - db
        volumes:
            - ./db/backups:/db
        env_file:
            - ./env/MYSQLcredentials.env
        networks:
            - backend-network

    php-admin:
        image: phpmyadmin/phpmyadmin 
        restart: always
        depends_on:
            - db
        ports: 
            - "3008:80"
        networks:
            - backend-network
    
    frontend-nodejs:
        build: ./frontEnd
        restart: always
        env_file:
            - ./env/NODEvariables.env
        ports:
            - "3006:3006"
        networks:
            - frontend-network
        
    frontend-server:
        image: nginx:mainline-alpine
        restart: always
        ports:
            - "80:80"
        volumes:
            #- web-root:/var/www/html
            - ./frontEnd/nginx-conf:/etc/nginx/conf.d
        depends_on:
            - frontend-nodejs
        networks:
            - frontend-network

volumes:
    sql-datavolume:
    #web-root:

networks:
    backend-network:
        driver: bridge
    frontend-network:
        driver: bridge